<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
    
  <context:property-placeholder location="io/untypedjay/unbuggable/test/jpa.properties" />
  
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="io.untypedjay.unbuggable.domain" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<!-- BeanPostProcessor that processes @PersistenceContext for injecting EntityManager -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

  <!-- BeanPostProcessor for exception translation -->
  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- ============================ DAO DEFINITIONS =========================== -->
	<bean id="employeeDaoJpa" class="io.untypedjay.unbuggable.dao.jpa.EmployeeDaoJpa"/>

	<!-- ====================== BUSINESS OBJECT DEFINITIONS ======================= -->
	<bean id="workLog" class="io.untypedjay.unbuggable.logic.WorkLogImpl1">
		<property name="employeeDao" ref="employeeDaoJpa"/>
	</bean>

	<!-- ======================== TRANSACTION DEFINITIONS ========================= -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- variant 1 -->
<!--	<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--		<tx:attributes>-->
<!--			<tx:method name="find*" read-only="true"/>-->
<!--			<tx:method name="*"/>-->
<!--		</tx:attributes>-->
<!--	</tx:advice>-->

<!--	<aop:config>-->
<!--		<aop:advisor advice-ref="txAdvice" pointcut="execution(public * swt6.spring.worklog.logic..*.*(..))"/>-->
<!--	</aop:config>-->

	<!-- variant 2 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- ========================= UIProcessComponent =========================== -->
	<bean id="jpaInterceptor" class="io.untypedjay.unbuggable.util.advice.JpaInterceptor">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<bean id="uiComponent" class="io.untypedjay.unbuggable.ui.UIProcessComponent">
		<property name="workLog" ref="workLog"/>
	</bean>

	<aop:config>
		<aop:aspect ref="jpaInterceptor">
			<aop:around
				method="holdEntityManager"
				pointcut="execution(public * io.untypedjay.unbuggable.ui..*.*(..))"
			/>
		</aop:aspect>
	</aop:config>
	     
</beans>



